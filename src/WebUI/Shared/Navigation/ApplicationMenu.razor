@using Microsoft.AspNetCore.Http

@inject IHttpContextAccessor HttpContextAccessor

<AuthorizeView>
  <Authorized>
    <div class="menu-item">
      Welcome @Nickname()
    </div>
    <div class="menu-item menu-clickable">
      <div class="dropdown">
        <a class="nav-link dropdown-toggle" style="cursor: pointer" id="myAccountDropdown" role="button"
           placement="bottom"
           data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
          <i class="fas fa-user-cog"></i>
        </a>
        <div aria-labelledby="myAccountDropdown" class="dropdown-menu">
          <a ngbDropdownItem href="#" (click)="$event.preventDefault()">
            <div class="item-icon"><i class="far fa-id-card-alt"></i></div>
            <div class="item-label">Profile</div>
          </a>
        
          <a ngbDropdownItem href="#" (click)="$event.preventDefault()">
            <div class="item-icon"><i class="fal fa-key"></i></div>
            <div class="item-label">Password</div>
          </a>
        
          <a ngbDropdownItem href="#" (click)="$event.preventDefault()">
            <div class="item-icon"><i class="far fa-calendar-alt"></i></div>
            <div class="item-label">Calendar</div>
          </a>
        
          <a ngbDropdownItem href="#" (click)="$event.preventDefault()">
            <div class="item-icon"><i class="fal fa-bell"></i></div>
            <div class="item-label">Notifications</div>
          </a>
        
          <a ngbDropdownItem href="#" (click)="$event.preventDefault()">
            <div class="item-icon"><i class="fas fa-link"></i></div>
            <div class="item-label">Battle.net</div>
          </a>
        
          <a ngbDropdownItem href="#" (click)="$event.preventDefault()">
            <div class="item-icon"><i class="fas fa-link"></i></div>
            <div class="item-label">Discord</div>
          </a>
        
          <div class="dropdown-divider"></div>
        
          <a ngbDropdownItem *ngIf="!themeService.isDarkTheme()" (click)="themeService.setDarkTheme()">
            <div class="item-icon"><i class="far fa-palette"></i></div>
            <div class="item-label">Set Dark Theme</div>
          </a>
        
          <a ngbDropdownItem *ngIf="themeService.isDarkTheme()" (click)="themeService.setLightTheme()">
            <div class="item-icon"><i class="far fa-palette"></i></div>
            <div class="item-label">Set Light Theme</div>
          </a>
        
          <a ngbDropdownItem routerLink="/debug/token">
            <div class="item-icon"><i class="fas fa-debug"></i></div>
            <div class="item-label">OAuth Debug</div>
          </a>
        
          <div class="dropdown-divider"></div>
        
          <a ngbDropdownItem href="#" (click)="auth.login('/menu')" *ngIf="!auth.loggedIn">
            <div class="item-icon"><i class="fas fa-sign-in"></i></div>
            <div class="item-label">Log In</div>
          </a>
          <a ngbDropdownItem href="#" (click)="logout($event)" *ngIf="auth.loggedIn">
            <div class="item-icon"><i class="fas fa-sign-out"></i></div>
            <div class="item-label">Log Out</div>
          </a>
        
        </div>
      </div>
    </div>
  </Authorized>
  <NotAuthorized>
    <div class="menu-item">
      <i>If it's not fun then don't do it!</i>
    </div>
  </NotAuthorized>
</AuthorizeView>

@code {

  private string Nickname()
  {
    var nickname = HttpContextAccessor.HttpContext.User.Claims
      .Single(c => c.Type == "nickname").Value;

    return nickname;
  }

}
