// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;

namespace LaDanse.Persistence.Migrations
{
    [DbContext(typeof(LaDanseDbContext))]
    partial class LaDanseDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasDatabaseName("IDX_E115ED785AF690F3");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_E115ED7862DEB3E8");

                    b.ToTable("GameCharacterClaim");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaimVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT")
                        .HasColumnName("comment")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameCharacterClaimId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterClaimId");

                    b.Property<bool>("IsRaider")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isRaider");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterClaimId")
                        .HasDatabaseName("IDX_C33F42E09113A92D");

                    b.ToTable("GameCharacterClaimVersion");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.PlaysGameRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameCharacterClaimId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterClaimId");

                    b.Property<sbyte>("GameRole")
                        .HasColumnType("TINYINT")
                        .HasColumnName("gameRole");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterClaimId")
                        .HasDatabaseName("IDX_7A9E9B239113A92D");

                    b.ToTable("PlaysGameRole");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Comments.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("VARCHAR(4000)")
                        .HasColumnName("content")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("groupId");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("postDate");

                    b.Property<Guid>("PosterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("posterId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .HasDatabaseName("IDX_5BC96BF0ED8188B0");

                    b.HasIndex("PosterId")
                        .HasDatabaseName("IDX_5BC96BF0581A197");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Comments.CommentGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("postDate");

                    b.HasKey("Id");

                    b.ToTable("CommentGroup");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("CommentGroupId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("commentGroupId");

                    b.Property<string>("Description")
                        .HasColumnType("VARCHAR(4000)")
                        .HasColumnName("description")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("InviteTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("inviteTime");

                    b.Property<DateTime>("LastModifiedTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("lastModifiedTime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<Guid>("OrganiserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("organiserId");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("startTime");

                    b.Property<sbyte>("State")
                        .HasColumnType("TINYINT")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.HasIndex("CommentGroupId");

                    b.HasIndex("OrganiserId")
                        .HasDatabaseName("IDX_FA6F25A34BDD3C8");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignUp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("EventId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("eventId");

                    b.Property<sbyte>("Type")
                        .HasColumnType("TINYINT")
                        .HasColumnName("type");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .HasDatabaseName("IDX_DC8B3F7B2B2EBB6C");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_DC8B3F7B62DEB3E8");

                    b.ToTable("SignUp");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignedForGameRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<sbyte>("GameRole")
                        .HasColumnType("TINYINT")
                        .HasColumnName("gameRole");

                    b.Property<Guid>("SignUpId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("signUpId");

                    b.HasKey("Id");

                    b.HasIndex("SignUpId")
                        .HasDatabaseName("IDX_16186B55A966702F");

                    b.ToTable("SignedForGameRole");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Forum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("description")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<DateTime?>("LastPostDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("lastPostDate");

                    b.Property<Guid?>("LastPostPosterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("lastPostPosterId");

                    b.Property<Guid?>("LastPostTopicId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("lastPostTopicId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("LastPostPosterId")
                        .HasDatabaseName("IDX_44EA91C922F0147C");

                    b.HasIndex("LastPostTopicId")
                        .IsUnique()
                        .HasDatabaseName("IDX_44EA91C91CA16452");

                    b.ToTable("Forum");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.ForumLastVisit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime>("LastVisitDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("lastVisitDate");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_F17408662DEB3E8");

                    b.ToTable("ForumLastVisit");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("content")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("postDate");

                    b.Property<Guid>("PosterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("posterId")
                        .HasComment("CHAR(36)");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("topicId")
                        .HasComment("CHAR(36)");

                    b.HasKey("Id");

                    b.HasIndex("PosterId")
                        .HasDatabaseName("IDX_FAB8C3B3581A197");

                    b.HasIndex("TopicId")
                        .HasDatabaseName("IDX_FAB8C3B3E2E0EAFB");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("ForumId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("forumId");

                    b.Property<DateTime?>("LastPostDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("lastPostDate");

                    b.Property<Guid?>("LastPostPosterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("lastPostPosterId");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("DATETIME")
                        .HasColumnName("postDate");

                    b.Property<Guid>("PosterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("posterId");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("subject")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ForumId")
                        .HasDatabaseName("IDX_5C81F11F7830F151");

                    b.HasIndex("LastPostPosterId")
                        .HasDatabaseName("IDX_5C81F11F22F0147C");

                    b.HasIndex("PosterId")
                        .HasDatabaseName("IDX_5C81F11F581A197");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.UnreadPost", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("PostId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("postId");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("PostId")
                        .HasDatabaseName("IDX_6B0B9B3EE094D20D");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_6B0B9B3E62DEB3E8");

                    b.ToTable("UnreadPost");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameRealmId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameRealmId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("GameRealmId")
                        .HasDatabaseName("IDX_92AF3B34FA96DBDA");

                    b.ToTable("GameCharacter");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacterVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterId");

                    b.Property<Guid>("GameClassId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameClassId");

                    b.Property<Guid>("GameRaceId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameRaceId");

                    b.Property<uint>("Level")
                        .HasColumnType("INT UNSIGNED")
                        .HasColumnName("level");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasDatabaseName("IDX_A70EBD185AF690F3");

                    b.HasIndex("GameClassId")
                        .HasDatabaseName("IDX_A70EBD18F3B4E37B");

                    b.HasIndex("GameRaceId")
                        .HasDatabaseName("IDX_A70EBD18E036C39A");

                    b.ToTable("GameCharacterVersion");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameGuild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<uint>("GameId")
                        .HasColumnType("INT UNSIGNED")
                        .HasColumnName("gameId");

                    b.Property<Guid>("GameRealmId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameRealmId");

                    b.Property<string>("GameSlug")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("gameSlug")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("GameRealmId")
                        .HasDatabaseName("IDX_B48152AFFA96DBDA");

                    b.ToTable("GameGuild");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.InGameGuild", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterId");

                    b.Property<Guid>("GameGuildId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameGuildId");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasDatabaseName("IDX_CA2244C5AF690F3");

                    b.HasIndex("GameGuildId")
                        .HasDatabaseName("IDX_CA2244C75407DAB");

                    b.ToTable("InGameGuild");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<uint>("GameId")
                        .HasColumnType("INT UNSIGNED")
                        .HasColumnName("gameId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("GameClass");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameFaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<uint>("GameId")
                        .HasColumnType("INT UNSIGNED")
                        .HasColumnName("gameId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("GameFaction");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameRace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<Guid>("GameFactionId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameFactionId");

                    b.Property<uint>("GameId")
                        .HasColumnType("INT UNSIGNED")
                        .HasColumnName("gameId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("GameFactionId")
                        .HasDatabaseName("IDX_D51A7CF883048B90");

                    b.ToTable("GameRace");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameRealm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<uint>("GameId")
                        .HasColumnType("INT UNSIGNED")
                        .HasColumnName("gameId");

                    b.Property<string>("GameSlug")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("gameSlug")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("GameRealm");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("discr")
                        .IsRequired()
                        .HasColumnType("char(15)")
                        .HasColumnName("discr");

                    b.HasKey("Id");

                    b.ToTable("GameCharacterSource");

                    b.HasDiscriminator<string>("discr").HasValue("GameCharacterSource");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.GameCharacterSyncSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameCharacterSourceId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterSourceId");

                    b.Property<string>("Log")
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("log")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterSourceId")
                        .HasDatabaseName("IDX_EC73362CDD71BB");

                    b.ToTable("GameCharacterSyncSession");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.TrackedBy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("endTime");

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fromTime");

                    b.Property<Guid>("GameCharacterId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterId");

                    b.Property<Guid>("GameCharacterSourceId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameCharacterSourceId");

                    b.HasKey("Id");

                    b.HasIndex("GameCharacterId")
                        .HasDatabaseName("IDX_C2316E125AF690F3");

                    b.HasIndex("GameCharacterSourceId")
                        .HasDatabaseName("IDX_C2316E122CDD71BB");

                    b.ToTable("TrackedBy");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(35)")
                        .HasColumnName("displayName")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<bool>("DisplayNameByUser")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("displayNameByUser");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(180)")
                        .HasColumnName("email")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("ExternalId")
                        .HasColumnType("VARCHAR(127)")
                        .HasColumnName("externalId")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique()
                        .HasDatabaseName("UNIQ_B28B6F38A0D96FBF");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UNIQ_B28B6F3892FC23A8");

                    b.HasIndex("ExternalId")
                        .IsUnique()
                        .HasDatabaseName("UNIQ_B28B6F38C05FB297");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.ActivityQueueItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<Guid?>("ActivityById")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("activityById");

                    b.Property<DateTime>("ActivityOn")
                        .HasColumnType("DATETIME")
                        .HasColumnName("activityOn");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("activityType")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnType("DATETIME")
                        .HasColumnName("processedOn");

                    b.Property<string>("RawData")
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("rawData")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ActivityById")
                        .HasDatabaseName("IDX_8A274BCA93C757EE");

                    b.ToTable("ActivityQueueItem");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.NotificationQueueItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<Guid?>("ActivityById")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("activityById");

                    b.Property<DateTime>("ActivityOn")
                        .HasColumnType("DATETIME")
                        .HasColumnName("activityOn");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("activityType")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<DateTime?>("ProcessedOn")
                        .HasColumnType("DATETIME")
                        .HasColumnName("processedOn");

                    b.Property<string>("RawData")
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("rawData")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("ActivityById")
                        .HasDatabaseName("IDX_C656D44393C757EE");

                    b.ToTable("NotificationQueueItem");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.CalendarExport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<bool>("ExportAbsence")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("exportAbsence");

                    b.Property<bool>("ExportNew")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("exportNew");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("secret")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_6E28848862DEB3E8");

                    b.ToTable("CalendarExport");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.FeatureToggle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("feature")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<bool>("Toggle")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("toggle");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_D25E05DD612E729E");

                    b.ToTable("FeatureToggle");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("name")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2048)")
                        .HasColumnName("value")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_50C9810462DEB3E8");

                    b.ToTable("Setting");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.FeatureUse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("feature")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("RawData")
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("rawData")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<Guid?>("UsedById")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("usedById");

                    b.Property<DateTime>("UsedOn")
                        .HasColumnType("DATETIME")
                        .HasColumnName("usedOn");

                    b.HasKey("Id");

                    b.HasIndex("UsedById")
                        .HasDatabaseName("IDX_E504F432FCEF271C");

                    b.ToTable("FeatureUse");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("LONGTEXT")
                        .HasColumnName("feedback")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<Guid>("PostedById")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("postedById");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("DATETIME")
                        .HasColumnName("postedOn");

                    b.HasKey("Id");

                    b.HasIndex("PostedById")
                        .HasDatabaseName("IDX_2B5F260E9DD8CB47");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.MailSend", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<string>("FromAddress")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("fromAddress")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<DateTime>("SendOn")
                        .HasColumnType("DATETIME")
                        .HasColumnName("sendOn");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("subject")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.Property<string>("ToAddress")
                        .IsRequired()
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("toAddress")
                        .UseCollation("utf8mb4_unicode_ci")
                        .HasCharSet("utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("MailSend");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Guild.GameGuildSync", b =>
                {
                    b.HasBaseType("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource");

                    b.Property<Guid>("GameGuildId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("gameGuildId");

                    b.HasIndex("GameGuildId")
                        .HasDatabaseName("IDX_18BD775675407DAB");

                    b.HasDiscriminator().HasValue("GuildSync");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Profile.ProfileSync", b =>
                {
                    b.HasBaseType("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("userId");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IDX_70D670C87D3656A4");

                    b.HasDiscriminator().HasValue("ProfileSync");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_E115ED785AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_E115ED7862DEB3E8")
                        .IsRequired();

                    b.Navigation("GameCharacter");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaimVersion", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", "GameCharacterClaim")
                        .WithMany()
                        .HasForeignKey("GameCharacterClaimId")
                        .HasConstraintName("FK_C33F42E09113A92D")
                        .IsRequired();

                    b.Navigation("GameCharacterClaim");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.CharacterClaims.PlaysGameRole", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.CharacterClaims.GameCharacterClaim", "GameCharacterClaim")
                        .WithMany()
                        .HasForeignKey("GameCharacterClaimId")
                        .HasConstraintName("FK_7A9E9B239113A92D")
                        .IsRequired();

                    b.Navigation("GameCharacterClaim");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Comments.Comment", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Comments.CommentGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_5BC96BF0ED8188B0")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Poster")
                        .WithMany()
                        .HasForeignKey("PosterId")
                        .HasConstraintName("FK_5BC96BF0581A197")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Poster");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.Event", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Comments.CommentGroup", "CommentGroup")
                        .WithMany()
                        .HasForeignKey("CommentGroupId")
                        .HasConstraintName("FK_FA6F25A34BDD4B9")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Organiser")
                        .WithMany()
                        .HasForeignKey("OrganiserId")
                        .HasConstraintName("FK_FA6F25A34BDD3C8")
                        .IsRequired();

                    b.Navigation("CommentGroup");

                    b.Navigation("Organiser");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignUp", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Events.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK_DC8B3F7B2B2EBB6C")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_DC8B3F7B62DEB3E8")
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Events.SignedForGameRole", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Events.SignUp", "SignUp")
                        .WithMany()
                        .HasForeignKey("SignUpId")
                        .HasConstraintName("FK_16186B55A966702F")
                        .IsRequired();

                    b.Navigation("SignUp");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Forum", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "LastPostPoster")
                        .WithMany()
                        .HasForeignKey("LastPostPosterId")
                        .HasConstraintName("FK_44EA91C922F0147C");

                    b.HasOne("LaDanse.Target.Entities.Forums.Topic", "LastPostTopic")
                        .WithMany()
                        .HasForeignKey("LastPostTopicId")
                        .HasConstraintName("FK_44EA91C91CA16452");

                    b.Navigation("LastPostPoster");

                    b.Navigation("LastPostTopic");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.ForumLastVisit", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_F17408662DEB3E8")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Post", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Poster")
                        .WithMany()
                        .HasForeignKey("PosterId")
                        .HasConstraintName("FK_FAB8C3B3581A197")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Forums.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .HasConstraintName("FK_FAB8C3B3E2E0EAFB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poster");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.Topic", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Forums.Forum", "Forum")
                        .WithMany()
                        .HasForeignKey("ForumId")
                        .HasConstraintName("FK_5C81F11F7830F151")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "LastPostPoster")
                        .WithMany()
                        .HasForeignKey("LastPostPosterId")
                        .HasConstraintName("FK_5C81F11F22F0147C");

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "Poster")
                        .WithMany()
                        .HasForeignKey("PosterId")
                        .HasConstraintName("FK_5C81F11F581A197")
                        .IsRequired();

                    b.Navigation("Forum");

                    b.Navigation("LastPostPoster");

                    b.Navigation("Poster");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Forums.UnreadPost", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Forums.Post", "Post")
                        .WithMany()
                        .HasForeignKey("PostId")
                        .HasConstraintName("FK_6B0B9B3EE094D20D")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_6B0B9B3E62DEB3E8")
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacter", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameRealm", "GameRealm")
                        .WithMany()
                        .HasForeignKey("GameRealmId")
                        .HasConstraintName("FK_92AF3B34FA96DBDA")
                        .IsRequired();

                    b.Navigation("GameRealm");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameCharacterVersion", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_A70EBD185AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameClass", "GameClass")
                        .WithMany()
                        .HasForeignKey("GameClassId")
                        .HasConstraintName("FK_A70EBD18F3B4E37B")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameRace", "GameRace")
                        .WithMany()
                        .HasForeignKey("GameRaceId")
                        .HasConstraintName("FK_A70EBD18E036C39A")
                        .IsRequired();

                    b.Navigation("GameCharacter");

                    b.Navigation("GameClass");

                    b.Navigation("GameRace");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.GameGuild", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameRealm", "GameRealm")
                        .WithMany()
                        .HasForeignKey("GameRealmId")
                        .HasConstraintName("FK_B48152AFFA96DBDA")
                        .IsRequired();

                    b.Navigation("GameRealm");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Characters.InGameGuild", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_CA2244C5AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameGuild", "GameGuild")
                        .WithMany()
                        .HasForeignKey("GameGuildId")
                        .HasConstraintName("FK_CA2244C75407DAB")
                        .IsRequired();

                    b.Navigation("GameCharacter");

                    b.Navigation("GameGuild");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Core.GameRace", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Core.GameFaction", "GameFaction")
                        .WithMany()
                        .HasForeignKey("GameFactionId")
                        .HasConstraintName("FK_D51A7CF883048B90")
                        .IsRequired();

                    b.Navigation("GameFaction");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.GameCharacterSyncSession", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource", "GameCharacterSource")
                        .WithMany()
                        .HasForeignKey("GameCharacterSourceId")
                        .HasConstraintName("FK_EC73362CDD71BB")
                        .IsRequired();

                    b.Navigation("GameCharacterSource");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.TrackedBy", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameCharacter", "GameCharacter")
                        .WithMany()
                        .HasForeignKey("GameCharacterId")
                        .HasConstraintName("FK_C2316E125AF690F3")
                        .IsRequired();

                    b.HasOne("LaDanse.Target.Entities.GameData.Sync.GameCharacterSource", "GameCharacterSource")
                        .WithMany()
                        .HasForeignKey("GameCharacterSourceId")
                        .HasConstraintName("FK_C2316E122CDD71BB")
                        .IsRequired();

                    b.Navigation("GameCharacter");

                    b.Navigation("GameCharacterSource");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.ActivityQueueItem", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "ActivityBy")
                        .WithMany()
                        .HasForeignKey("ActivityById")
                        .HasConstraintName("FK_8A274BCA93C757EE");

                    b.Navigation("ActivityBy");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Queues.NotificationQueueItem", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "ActivityBy")
                        .WithMany()
                        .HasForeignKey("ActivityById")
                        .HasConstraintName("FK_C656D44393C757EE");

                    b.Navigation("ActivityBy");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.CalendarExport", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_6E28848862DEB3E8")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.FeatureToggle", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_D25E05DD612E729E")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Settings.Setting", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_50C9810462DEB3E8")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.FeatureUse", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "UsedBy")
                        .WithMany()
                        .HasForeignKey("UsedById")
                        .HasConstraintName("FK_E504F432FCEF271C");

                    b.Navigation("UsedBy");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.Telemetry.Feedback", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "PostedBy")
                        .WithMany()
                        .HasForeignKey("PostedById")
                        .HasConstraintName("FK_2B5F260E9DD8CB47")
                        .IsRequired();

                    b.Navigation("PostedBy");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Guild.GameGuildSync", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.GameData.Characters.GameGuild", "GameGuild")
                        .WithMany()
                        .HasForeignKey("GameGuildId")
                        .HasConstraintName("FK_18BD775675407DAB")
                        .IsRequired();

                    b.Navigation("GameGuild");
                });

            modelBuilder.Entity("LaDanse.Target.Entities.GameData.Sync.Profile.ProfileSync", b =>
                {
                    b.HasOne("LaDanse.Target.Entities.Identity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_70D670C87D3656A4")
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
